const express = require("express");
const app = express();
app.use(express.json()); //It recognize the incoming request object as JSON object and parse it.
const { open } = require("sqlite");
const sqlite3 = require("sqlite3");
const path = require("path");

const dbPath = path.join(__dirname, "goodreads.db");
let db = null;

const initializeDbServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    });
    app.listen(3000, () => {
      console.log("Started running server at https://localhost/3000");
    });
  } catch (e) {
    console.log(`DB Error : ${e.message}`);
    process.exit(1);
  }
};
initializeDbServer();

//Get Books
app.get("/books/", async (request, response) => {
  const dbQuery = `SELECT * FROM book ORDER BY book_id`;
  const bookDetails = await db.all(dbQuery);
  response.send(bookDetails);
});

//Get book
app.get("/books/:bookId/", async (request, response) => {
  const { bookId } = request.params;
  const dbQuery = `SELECT * FROM book WHERE book_id = ${bookId}`;
  const bookDetails = await db.get(dbQuery);
  response.send(bookDetails);
});

//Post Book
app.post("/books/", async (request, response) => {
  const bookDetails = request.body;
  const {
    title,
    authorId,
    rating,
    ratingCount,
    reviewCount,
    description,
    pages,
    dateOfPublication,
    editionLanguage,
    price,
    onlineStores,
  } = bookDetails;
  const addBookQuery = `
            INSERT INTO
            book (title,author_id,rating,rating_count,review_count,description,pages,date_of_publication,edition_language,price,online_stores)
            VALUES
            (
                '${title}',
                ${authorId},
                ${rating},
                ${ratingCount},
                ${reviewCount},
                '${description}',
                ${pages},
                '${dateOfPublication}',
                '${editionLanguage}',
                ${price},
                '${onlineStores}'
            );`;
  const dbResponse = await db.run(addBookQuery); //db run() method is used to create or update table data.
  const bookId = dbResponse.lastID;
  response.send({ bookId: bookId });
});
